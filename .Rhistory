edh
sum(dice_high* dice_sqr) - edh^2
install.packages("ProjectTemplate", lib="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library('ProjectTemplate')
create.project('letters')
library('ProjectTemplate')
create.project('letters')
source('~/Data_Science/GitHub/ExData_Plotting1/plot4.R')
source('~/Data_Science/GitHub/ExData_Plotting1/plot3.R')
png( filename ='~/Data_Science/GitHub/ExData_Plotting1/figure/plot3.png', width = 480, height = 480 )
p3 <- ggplot(data_long, aes(x= datetime, y= Reading, col= Meter)) + geom_line()
p3
dev.off()
png( filename ='~/Data_Science/GitHub/ExData_Plotting1/figure/plot2.png',
width = 480, height = 480 )
p2 <- ggplot(aes(x = datetime, y = Global_active_power), data = mod_data) +
geom_line() +
ylab('Global avtive Power (KW')
p2
dev.off()
png( filename ='~/Data_Science/GitHub/ExData_Plotting1/figure/plot1.png', width = 480, height = 480 )
p1 <-hist(power_consumption$Global_active_power,
col = 'red',
xlab = 'Global Active Power(KW) ')
dev.off()
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(ggplot2)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies)+ geom_smooth()
movies <- c(votes= rnorm(10), rating= rnorm(10))
qplot(votes, rating, data = movies)+ geom_smooth()
data
movies
str(movies)
movies <- as.data.frame (c(votes= rnorm(10), rating= rnorm(10)))
View(movies)
t(xx)
movies <- as.data.frame ((votes= rnorm(10), rating= rnorm(10))
movies <- as.matrix (rnorm(20), nocol(2))
View(movies)
movies <- as.matrix (rnorm(20), norow(10))
movies <- as.matrix (rnorm(20), norow=10 )
movies <- as.matrix(x = 1:20, ncol= 2)
View(movies)
?as.matrix
movies <- as.matrix(x = 1:20, ncol= 2, nrow = 10)
movies
mdat <- matrix(c(1,2,3, 11,12,13), nrow = 2, ncol = 3, byrow = TRUE,
dimnames = list(c("row1", "row2"),
c("C.1", "C.2", "C.3")))
mdat
mdat <- matrix(1:20), nrow = 10, ncol = 2, byrow = TRUE)
mdat <- matrix(1:20, nrow = 10, ncol = 2, byrow = TRUE)
mdat
names(mdat)
names(mdat) <- c('votes', 'rating')
mdat
names(mdat)
mdat <- matrix(1:20, nrow = 10, ncol = 2, byrow = TRUE)
colnames(mdata)
colnames(mdat)
colnames(mdat) <- c( 'votes', 'rating')
mdat
qplot(votes, rating, data = mdat)+ geom_smooth()
mdat <- as.data.frame(mdat)
qplot(votes, rating, data = mdat)+ geom_smooth()
library(ggplot2)
library(ggplot2movies)
g <- ggplot(movies, aes(votes, rating))
print(g)
library(ggplot2)
library(ggplot2movies)
g <- ggplot(movies, aes(votes, rating))
print(g)
g <- ggplot(movies, aes(votes, rating))
library(ggplot2movies)
install.packages("ggplot2movies", lib="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library(ggplot2)
library(ggplot2movies)
g <- ggplot(movies, aes(votes, rating))
str(movies)
str(movies)
library(ggplot2movies)
g <- ggplot(movies, aes(votes, rating))
print(g)
g
str(movies)
rbinom(n = 1, size = 1, prob = .5 )
rbinom(n = 1, size = 1, prob = .5 )
rbinom(n = 1, size = 1, prob = .5 )
rbinom(n = 1, size = 1, prob = .5 )
rbinom(n = 1, size = 1, prob = .5 )
x1 <- rnorm(30)
x2 <- rnorm(30)
Euc_dist = dist(rbind(x1,x2) ,method="euclidean")
ط١
x1
rbind(x1,x2)
x3 <- rbind(x1,x2)
x
x3
View(x3)
dist(x = x3, method = euclidian )
dist(x = x3, method = euclidean )
dist(x = x3, method = 'euclidean' )
install.packages("lsa", lib="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library(lsa)
library('SnowballC')
library(lsa)
cosine(x1,x2)
cor(x1,x2)
pkgs <- c(
"broom", "dplyr", "ggplot2", "jpeg", "jsonlite",
"knitr", "Lahman", "microbenchmark", "png", "pryr", "purrr",
"rcorpora", "readr", "stringr", "tibble", "tidyr"
)
install.packages(pkgs)
مس
ls
library(dplyr)
library(tidyr)
library(ggplot2)
X_train <- tbl_df(read.table("~/Data_Science/Getting_-_Cleaning_Data/UCI HAR Dataset/train/X_train.txt",
quote="\"", comment.char="",
stringsAsFactors=FALSE))
Y_train <- tbl_df(read.table("~/Data_Science/Getting_-_Cleaning_Data/UCI HAR Dataset/train/Y_train.txt",
quote="\"", comment.char="",
stringsAsFactors=FALSE))
subject_train <- tbl_df(read.table("~/Data_Science/Getting_-_Cleaning_Data/UCI HAR Dataset/train/subject_train.txt",
quote="\"", comment.char="",
stringsAsFactors=FALSE))
X_test <- tbl_df(read.table("~/Data_Science/Getting_-_Cleaning_Data/UCI HAR Dataset/test/X_test.txt",
quote="\"", comment.char=""))
Y_test <- tbl_df(read.table("~/Data_Science/Getting_-_Cleaning_Data/UCI HAR Dataset/test/Y_test.txt",
quote="\"", comment.char=""))
subject_test <- tbl_df(read.table("~/Data_Science/Getting_-_Cleaning_Data/UCI HAR Dataset/test/subject_test.txt",
quote="\"", comment.char=""))
features <- read.table("~/Data_Science/Getting_-_Cleaning_Data/UCI HAR Dataset/features.txt",
quote="\"", comment.char="")
##  1. Merges the training and the test sets to create one data set.
X_merge  <- rbind(X_train, X_test)
Y_merge  <- rbind(Y_train, Y_test)
XY_merge <- tbl_df( cbind(X_merge, Y_merge))
names(XY_merge) <- features$V2
valid_column_names <- make.names(names=names(XY_merge), unique=TRUE, allow_ = TRUE)
names(XY_merge) <- valid_column_names
XY_merge
names(XY_merge)
names(XY_merge)[562] <- 'out'
XY_mean_sd <- select(XY_merge, out, contains( 'mean', ignore.case = T), contains('std')  )
XY_mean_sd <- tbl_df(select(XY_merge, out, contains( 'mean', ignore.case = T), contains('std') ) )
XY_mean_sd
XY_mean_sd <- select(XY_merge, out, contains( 'mean', ignore.case = T), contains('std')  )
XY_mean_sd
XY_mean_sd$out
XY_mean_sd$out <- as.factor(XY_mean_sd$out)
XY_mean_sd
install.packages("qdap", lib="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library(qdap)
gsub(1, walking, XY_mean_sd$out)
gsub(1, 'walking', XY_mean_sd$out)
activity_lables <- read.table("~/Data_Science/Getting_-_Cleaning_Data/
UCI HAR Dataset/activity_labels.txt",
quote="\"", comment.char="")
activity_labels <- read.table("~/Data_Science/Getting_-_Cleaning_Data/UCI HAR Dataset/activity_labels.txt", quote="\"", comment.char="")
View(activity_labels)
activity_labels <- read.table("~/Data_Science/Getting_-_Cleaning_Data/
UCI HAR Dataset/activity_labels.txt",
quote="\"", comment.char="")
activity_labels <- read.table("~/Data_Science/Getting_-_Cleaning_Data/UCI HAR Dataset/activity_labels.txt",
quote="\"", comment.char="")
activity_labels$V2
t(activity_labels$V2)
activity <- activity_labels$V2
activity
activity[3]
activity[1]
activity[[2]]
activity
activity[3,]
for (i in 1:6){
names(XY_mean_sd$out)[i] <- activity_labels[i]
}
for (i in 1:6){
names(XY_mean_sd$out)[[i] <- activity_labels[i]
}
for (i in 1:6)(names(XY_mean_sd$out)[[i] <- activity_labels[i])
View(activity_labels)
for (i in 1:6)(names(XY_mean_sd$out)[[i] <- activity_labels$V2[i])
View(activity_labels)
gsub(1, 'WALKING', XY_mean_sd$out)
gsub(2, 'WALKING_UPSTAIRS', XY_mean_sd$out)
gsub(3, 'WALKING_DOWNSTAIRS', XY_mean_sd$out)
gsub(4, 'SITTING', XY_mean_sd$out)
gsub(5, 'STANDING', XY_mean_sd$out)
gsub(6, 'LAYING', XY_mean_sd$out)
XY_mean_sd$out
XY_mean_SD <- gsub(1, 'WALKING', XY_mean_sd$out)
XY_mean_SD <- gsub(2, 'WALKING_UPSTAIRS', XY_mean_sd$out)
XY_mean_SD <- gsub(3, 'WALKING_DOWNSTAIRS', XY_mean_sd$out)
XY_mean_SD <- gsub(4, 'SITTING', XY_mean_sd$out)
XY_mean_SD <- gsub(5, 'STANDING', XY_mean_sd$out)
XY_mean_SD <- gsub(6, 'LAYING', XY_mean_sd$out)
XY_mean_sd$out
XY_mean_sd <- select(XY_merge, out, contains( 'mean', ignore.case = T), contains('std')  )
XY_mean_SD$out <- gsub(1, 'WALKING', XY_mean_sd$out)
XY_mean_SD$out <- gsub(2, 'WALKING_UPSTAIRS', XY_mean_sd$out)
XY_mean_SD$out <- gsub(3, 'WALKING_DOWNSTAIRS', XY_mean_sd$out)
XY_mean_SD$out <- gsub(4, 'SITTING', XY_mean_sd$out)
XY_mean_SD$out <- gsub(5, 'STANDING', XY_mean_sd$out)
XY_mean_SD$out <- gsub(6, 'LAYING', XY_mean_sd$out)
XY_mean_sd$out
XY_mean_SD$out <- gsub(1, 'WALKING', XY_mean_sd$out)
XY_mean_SD$out
XY_mean_SD$out <- gsub('1', 'WALKING', XY_mean_sd$out)
XY_mean_SD$out <- gsub('2', 'WALKING_UPSTAIRS', XY_mean_sd$out)
XY_mean_SD$out <- gsub('3', 'WALKING_DOWNSTAIRS', XY_mean_sd$out)
XY_mean_SD$out <- gsub('4', 'SITTING', XY_mean_sd$out)
XY_mean_SD$out <- gsub('5', 'STANDING', XY_mean_sd$out)
XY_mean_SD$out <- gsub('6', 'LAYING', XY_mean_sd$out)
XY_mean_SD$out
XY_mean_SD$out <- gsub('1', 'WALKING', XY_mean_sd$out)
XY_mean_SD$out <- gsub('2', 'WALKING_UPSTAIRS', XY_mean_sd$out)
XY_mean_SD$out
?gsub
X1 <- gsub('1', 'WALKING', XY_mean_sd$out)
X2 <- gsub('2', 'WALKING_UPSTAIRS', X1)
x2
X2
X3 <- gsub('3', 'WALKING_DOWNSTAIRS', X2)
X4 <- gsub('4', 'SITTING', X3)
X5 <- gsub('5', 'STANDING', X4)
X6 <- gsub('6', 'LAYING', X5)
X6
XY_mean_sd$out <- X6
XY_mean_sd$out
XY_tidy <- XY_mean_sd %>%
select(contains('mean'), out) %>%
group_by(out) %>%
summarise()
View(XY_tidy)
XY_tidy <- XY_mean_sd %>%
select(contains('mean'), out) %>%
group_by(out) %>%
summarise(mean())
XY_tidy <- XY_mean_sd %>%
select(contains('mean'), out) %>%
group_by(out) %>%
summarise(fun(mean))
XY_tidy <- XY_mean_sd %>%
select(contains('mean'), out) %>%
group_by(out) %>%
summarise(funs(mean))
XY_tidy <- XY_mean_sd %>%
select(contains('mean'), out) %>%
group_by(out) %>%
summarise(funs(mean))
XY_tidy <- XY_mean_sd %>%
select(contains('mean'), out) %>%
group_by(out) %>%
summarise_each(funs(mean))
View(XY_tidy)
View(subject_test)
View(subject_train)
subjects <- rbind(subject_train, subject_test)
mutate(XY_mean_sd, subject = subjects)
XY_mean_sd$subject <- subjects
XY_mean_sd$subject <- as.factor(subjects)
XY_mean_sd$subject <- subjects
XY_mean_sd$subject <- as.factor(XY_mean_sd$subject)
XY_tidy <- XY_mean_sd %>%
select(contains('mean'), out) %>%
group_by(subject, out) %>%
summarise_each(funs(mean))
XY_mean_sd$subject <- subjects
View(XY_mean_sd)
names(XY_mean_sd$subject)
names(XY_mean_sd$subject) <- "subject"
XY_tidy <- XY_mean_sd %>%
select(contains('mean'), out) %>%
group_by(subject, out) %>%
summarise_each(funs(mean))
View(XY_mean_sd)
View(subjects)
names(subjects)<- 'subject'
View(subjects)
XY_mean_sd$subject <- subjects
View(XY_mean_sd)
names(subjects)<- NULL
XY_mean_sd$subject <- subjects
View(XY_mean_sd)
names(subjects)<- NULL
XY_mean_sd$subject <- rbind(subject_train, subject_test)
View(XY_mean_sd)
names(XY_mean_sd$subject) <- "subject"
XY_tidy <- XY_mean_sd %>%
select(contains('mean'), out) %>%
group_by(subject.V1, out) %>%
summarise_each(funs(mean))
View(XY_mean_sd)
XY_mean_sd$subject <- rbind(subject_train, subject_test)
XY_tidy <- XY_mean_sd %>%
select(contains('mean'), out) %>%
group_by(subject.V1, out) %>%
summarise_each(funs(mean))
View(XY_mean_sd)
mutate(XY_mean_sd, subject = rbind(subject_train, subject_test)
)
subject <- rbind(subject_train, subject_test)
mutate(XY_mean_sd, subject = subject)
View(subjects)
subject <- rbind(subject_train, subject_test)
View(subjects)
mutate(XY_mean_sd, subject = subject)
XY_mean_sd$Subject <- rbind(subject_train, subject_test)
names(XY_mean_sd$Subject)
XY_tidy <- XY_mean_sd %>%
select(contains('mean'), out) %>%
group_by(V1, out) %>%
summarise_each(funs(mean))
names(XY_mean_sd$Subject)
XY_tidy <- XY_mean_sd %>%
select(contains('mean'), out) %>%
group_by(subject, out) %>%
summarise_each(funs(mean))
XY_tidy <- XY_mean_sd %>%
select(contains('mean'), out) %>%
group_by(Subject, out) %>%
summarise_each(funs(mean))
names(XY_mean_sd$out)
names(XY_mean_sd$subject)<- NULL
names(XY_mean_sd$subject)
XY_tidy <- XY_mean_sd %>%
select(contains('mean'), out) %>%
group_by(subject, out) %>%
summarise_each(funs(mean))
XY_mean_sd$subject <- rbind(subject_train, subject_test)
names(XY_mean_sd$subject)<- NULL
XY_tidy <- XY_mean_sd %>%
select(contains('mean'), out) %>%
group_by(subject, out) %>%
summarise_each(funs(mean))
names(XY_mean_sd)[89] <- 'subject'
XY_tidy <- XY_mean_sd %>%
select(contains('mean'), out) %>%
group_by(subject, out) %>%
summarise_each(funs(mean))
View(XY_mean_sd)
XY_mean_sd$subject <- as.factor(XY_mean_sd$subject)
XY_mean_sd <- select(XY_merge, out, contains( 'mean', ignore.case = T), contains('std')  )
View(XY_mean_sd)
XY_mean_sd$out <- X6
View(XY_mean_sd)
XY_mean_sd$subject <- rbind(subject_train, subject_test)
names(XY_mean_sd)[89] <- 'subject'
names(XY_mean_sd)[88] <- 'subject'
XY_tidy <- XY_mean_sd %>%
select(contains('mean'), out) %>%
group_by(subject, out) %>%
summarise_each(funs(mean))
make.names(names = XY_mean_sd$subject)
names(XY_mean_sd$subject)
str(XY_mean_sd$subject))
str(XY_mean_sd$subject)
factor(XY_mean_sd$subject)
library(reshape)
mydata <- rename(XY_mean_sd, c(subject="newname"))
View(mydata)
names(XY_mean_sd$subject) <- NULL
mydata <- rename(XY_mean_sd, c(subject="newname"))
View(mydata)
mydata$newname <- as.character(mydata$newname)
View(mydata)
mydata <- rename(XY_mean_sd, c(subject="subject"))
mydata$subject <- as.character(mydata$subject)
mydata$subject <- as.factor(mydata$subject)
XY_tidy <- XY_mean_sd %>%
select(contains('mean'), out) %>%
group_by(subject, out) %>%
summarise_each(funs(mean))
XY_tidy <- mydata %>%
select(contains('mean'), out) %>%
group_by(subject, out) %>%
summarise_each(funs(mean))
XY_mean_sd$subject <- rbind(subject_train, subject_test)
names(XY_mean_sd$subject) <- NULL
mydata <- rename(XY_mean_sd, c(subject="subject"))
mydata$subject <- as.character(mydata$subject)
mydata$subject <- as.factor(mydata$subject)
names(XY_mean_sd)[88] <- 'subject'
XY_tidy <- mydata %>%
select(contains('mean'), out) %>%
group_by(subject, out) %>%
summarise_each(funs(mean))
mydata <- rename(XY_mean_sd, c(subject="subject"))
mydata$subject <- as.character(mydata$subject)
mydata$subject <- as.factor(mydata$subject)
XY_tidy <- mydata %>%
select(contains('mean'), out) %>%
group_by(subject, out) %>%
summarise_each(funs(mean))
View(mydata)
XY_mean_sd$subject <- tr(rbind(subject_train, subject_test))
XY_mean_sd$subject <- t(rbind(subject_train, subject_test))
XY_mean_sd$subject <- rbind(subject_train, subject_test)
XY_mean_sd$subject
names(XY_mean_sd$subject) <- NULL
names(XY_mean_sd$subject)
XY_mean_sd$subject
mydata <- rename(XY_mean_sd, c(subject="subject"))
XY_mean_sd$subject
mydata$subject
featureNames <- read.table("UCI HAR Dataset/features.txt")
setwd("~/Data_Science/Getting_-_Cleaning_Data")
featureNames <- read.table("UCI HAR Dataset/features.txt")
library(data.table)
library(dplyr)
setwd("~/Data_Science/Getting_-_Cleaning_Data")
featureNames <- read.table("UCI HAR Dataset/features.txt")
activityLabels <- read.table("UCI HAR Dataset/activity_labels.txt", header = FALSE)
### Read Training Data
subjectTrain <- read.table("UCI HAR Dataset/train/subject_train.txt", header = FALSE)
activityTrain <- read.table("UCI HAR Dataset/train/y_train.txt", header = FALSE)
featuresTrain <- read.table("UCI HAR Dataset/train/X_train.txt", header = FALSE)
###    Read test data
subjectTest <- read.table("UCI HAR Dataset/test/subject_test.txt", header = FALSE)
activityTest <- read.table("UCI HAR Dataset/test/y_test.txt", header = FALSE)
featuresTest <- read.table("UCI HAR Dataset/test/X_test.txt", header = FALSE)
subject  <- rbind(subjectTrain, subjectTest)
activity <- rbind(activityTrain, activityTest)
features <- rbind(featuresTrain, featuresTest)
##   Naming the columns
colnames(features) <- t(featureNames[2])
##  Merge the data
colnames(activity) <- "Activity"
colnames(subject) <- "Subject"
completeData <- cbind(features,activity,subject)
View(completeData)
completeData$Subject
View(featureNames)
valid_column_names <- make.names(names = featureNames[2], unique=TRUE, allow_ = TRUE)
colnames(features) <- t(valid_column_names)
View(features)
colnames(features) <- valid_column_names
View(features)
features <- rbind(featuresTrain, featuresTest)
View(features)
names(features) <- valid_column_names
View(features)
features <- rbind(featuresTrain, featuresTest)
colnames(features) <- t(valid_column_names)
View(features)
str(valid_column_names)
features <- rbind(featuresTrain, featuresTest)
##   Naming the columns
colnames(features) <- t(featureNames[2])
##  Merge the data
colnames(activity) <- "Activity"
colnames(subject) <- "Subject"
completeData <- cbind(features,activity,subject)
names(completeData)<-gsub("Acc", "Accelerometer", names(completeData))
names(completeData)<-gsub("Gyro", "Gyroscope", names(completeData))
names(completeData)<-gsub("BodyBody", "Body", names(completeData))
names(completeData)<-gsub("Mag", "Magnitude", names(completeData))
names(completeData)<-gsub("^t", "Time", names(completeData))
names(completeData)<-gsub("^f", "Frequency", names(completeData))
names(completeData)<-gsub("tBody", "TimeBody", names(completeData))
names(completeData)<-gsub("-mean()", "Mean", names(completeData), ignore.case = TRUE)
names(completeData)<-gsub("-std()", "STD", names(completeData), ignore.case = TRUE)
names(completeData)<-gsub("-freq()", "Frequency", names(completeData), ignore.case = TRUE)
names(completeData)<-gsub("angle", "Angle", names(completeData))
names(completeData)<-gsub("gravity", "Gravity", names(completeData))
names(completeData)
valid_column_names <- make.names(names = names(completeData), unique=TRUE, allow_ = TRUE)
names(completeData) <- valid_column_names
names(completeData)
extractedData <- select(completeData, Subject, Activity, contains( 'mean', ignore.case = T), contains('std')  )
extractedData <- select(completeData, Subject, Activity,
contains( 'mean', ignore.case = T),
contains('std'), ignore.case = T  )
extractedData <- select(completeData, Subject, Activity,
contains( 'mean', ignore.case = T),
contains('std', ignore.case = T ) )
extractedData$Subject <- as.factor(extractedData$Subject)
extractedData <- data.table(extractedData)
View(extractedData)
XY_tidy <- extractedData %>%
select(Subject, Activity, contains('mean')) %>%
group_by(subject, out) %>%
summarise_each(funs(mean))
XY_tidy <- extractedData %>%
select(Subject, Activity, contains('mean')) %>%
group_by(subject, Activity) %>%
summarise_each(funs(mean))
XY_tidy <- extractedData %>%
select(Subject, Activity, contains('mean')) %>%
group_by(Subject, Activity) %>%
summarise_each(funs(mean))
View(XY_tidy)
tidyData <- aggregate(. ~Subject + Activity, extractedData, mean)
tidyData <- tidyData[order(tidyData$Subject,tidyData$Activity),]
View(tidyData)
View(XY_tidy)
XY_tidy <- extractedData %>%
select(Subject, Activity, contains('mean')) %>%
group_by(Subject, Activity) %>%
summarise_each(funs(mean)) %>%
arrange(Subject)
View(XY_tidy)
write.table(XY_tidy, file = "Tidy.txt", row.names = FALSE)
